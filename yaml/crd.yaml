---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    k8s-app: memcached-operator
  name: memcached.cache.example.com
spec:
  group: cache.example.com
  names:
    kind: Memcached
    plural: memcached
    shortNames: []
    singular: memcached
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                size:
                  description: Size is the size of the memcached deployment
                  format: int32
                  minimum: 0
                  type: integer
              type: object
            status:
              description: MemcachedStatus defines the observed state of Memcached
              properties:
                nodes:
                  description: Nodes are the names of the memcached pods
                  items:
                    type: string
                  type: array
              required:
                - nodes
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
